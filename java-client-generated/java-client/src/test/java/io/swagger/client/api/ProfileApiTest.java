/*
 * Microservices
 * Profile management microservice which will allow query, create, update, delete of profiles 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: manishsinghal.m@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Profile;
import io.swagger.client.model.ProfileResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfileApi
 */
@Ignore
public class ProfileApiTest {

    private final ProfileApi api = new ProfileApi();

    
    /**
     * Add new profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addProfileTest() throws ApiException {
        Profile body = null;
        ProfileResponse response = api.addProfile(body);

        // TODO: test validations
    }
    
    /**
     * Delete profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProfileTest() throws ApiException {
        Long applicantId = null;
        ProfileResponse response = api.deleteProfile(applicantId);

        // TODO: test validations
    }
    
    /**
     * query profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryProfileTest() throws ApiException {
        ProfileResponse response = api.queryProfile();

        // TODO: test validations
    }
    
    /**
     * Find profile by applicant ID
     *
     * Returns profile
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readProfileTest() throws ApiException {
        Long applicantId = null;
        ProfileResponse response = api.readProfile(applicantId);

        // TODO: test validations
    }
    
    /**
     * Update an existing profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProfileTest() throws ApiException {
        Profile body = null;
        ProfileResponse response = api.updateProfile(body);

        // TODO: test validations
    }
    
}
