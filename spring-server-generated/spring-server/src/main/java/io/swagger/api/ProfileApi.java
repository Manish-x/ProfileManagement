/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Profile;
import io.swagger.model.ProfileResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-03-22T22:15:12.014Z")

@Api(value = "profile", description = "the profile API")
@RequestMapping(value = "/v1")
public interface ProfileApi {

    @ApiOperation(value = "Add new profile", nickname = "addProfile", notes = "", response = ProfileResponse.class, authorizations = {
        @Authorization(value = "profile_auth", scopes = {
            @AuthorizationScope(scope = "write:profiles", description = "modify profiles")
            })
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProfileResponse.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/profile",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    default ResponseEntity<ProfileResponse> addProfile(@ApiParam(value = "create new profile" ,required=true )  @Valid @RequestBody Profile body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/xml")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("<null>  <message>aeiou</message>  <code>123</code></null>", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/xml", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"code\" : 0,  \"profile\" : [ {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  }, {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  } ],  \"message\" : \"message\"}", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProfileApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete profile", nickname = "deleteProfile", notes = "", response = ProfileResponse.class, authorizations = {
        @Authorization(value = "profile_auth", scopes = {
            @AuthorizationScope(scope = "write:profiles", description = "modify profiles")
            })
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProfileResponse.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "profile not found") })
    @RequestMapping(value = "/profile/{applicantId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<ProfileResponse> deleteProfile(@ApiParam(value = "applicantId  to delete",required=true) @PathVariable("applicantId") Long applicantId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/xml")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("<null>  <message>aeiou</message>  <code>123</code></null>", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/xml", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"code\" : 0,  \"profile\" : [ {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  }, {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  } ],  \"message\" : \"message\"}", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProfileApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "query profile", nickname = "queryProfile", notes = "", response = ProfileResponse.class, authorizations = {
        @Authorization(value = "profile_auth", scopes = {
            @AuthorizationScope(scope = "read:profiles", description = "read profiles"),
            @AuthorizationScope(scope = "write:profiles", description = "modify profiles")
            })
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProfileResponse.class) })
    @RequestMapping(value = "/profile",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    default ResponseEntity<ProfileResponse> queryProfile() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/xml")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("<null>  <message>aeiou</message>  <code>123</code></null>", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/xml", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"code\" : 0,  \"profile\" : [ {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  }, {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  } ],  \"message\" : \"message\"}", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProfileApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find profile by applicant ID", nickname = "readProfile", notes = "Returns profile", response = ProfileResponse.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProfileResponse.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Profile not found") })
    @RequestMapping(value = "/profile/{applicantId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ProfileResponse> readProfile(@ApiParam(value = "applicant ID of profile",required=true) @PathVariable("applicantId") Long applicantId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/xml")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("<null>  <message>aeiou</message>  <code>123</code></null>", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/xml", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"code\" : 0,  \"profile\" : [ {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  }, {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  } ],  \"message\" : \"message\"}", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProfileApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update an existing profile", nickname = "updateProfile", notes = "", response = ProfileResponse.class, authorizations = {
        @Authorization(value = "profile_auth", scopes = {
            @AuthorizationScope(scope = "write:profiles", description = "modify profiles")
            })
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProfileResponse.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "profile not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/profile",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    default ResponseEntity<ProfileResponse> updateProfile(@ApiParam(value = "update profile" ,required=true )  @Valid @RequestBody Profile body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/xml")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("<null>  <message>aeiou</message>  <code>123</code></null>", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/xml", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"code\" : 0,  \"profile\" : [ {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  }, {    \"professionalDetails\" : {      \"totalYearsOfExperience\" : 10,      \"primarySkill\" : \"java\",      \"role/designation\" : \"software engineer\"    },    \"personalDetails\" : {      \"firstName\" : \"Manish\",      \"lastName\" : \"singhal\",      \"phoneNumber\" : \"8767676756\",      \"address\" : [ {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      }, {        \"zipcode\" : 3181,        \"country\" : \"Australia\",        \"unit\" : \"U1103\",        \"street\" : \"7K high street windsor\",        \"addressType\" : \"home\",        \"state\" : \"VIC\"      } ],      \"emailId\" : \"yaml@gmail.com\",      \"applicantID\" : 4567677    },    \"skiilsList\" : {      \"yearsOfExperience\" : 1,      \"recentlyUsed\" : true,      \"monthsOfExperience\" : 6,      \"skillCategory\" : \"programming\",      \"toolName\" : \"swagger\"    }  } ],  \"message\" : \"message\"}", ProfileResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ProfileApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
